'''
题目：爬楼梯
描述：
假设你正在爬楼梯，需要 n 步才能到达顶部。每次你可以爬 1 或 2 个台阶。问：你有多少种不同的方法可以爬到楼顶？

示例：
输入：n=2       输出：2
解释：有两种方法可以爬到楼顶。
1 步 + 1 步
2 步

输入：n=3       输出：3
解释：有三种方法可以爬到楼顶。

1 步 + 1 步 + 1 步
1 步 + 2 步
2 步 + 1 步

要求：
请使用动态规划的方法解决这个问题。
尝试分析时间复杂度和空间复杂度。

考察点：动态规划 状态转移 边界条件
'''

#1 自己方法
def def1(n):
    temp = n
    while n-2 >= 0:
        def_1step(temp)
    while n-1 >= 0:
        def_2step(temp)

def def_1step(n):
    n = n - 1
    return n

def def_2step(n):
    n = n - 2


n = int(input())
def1(n)